"use strict";(self.webpackChunktil=self.webpackChunktil||[]).push([[813],{4137:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return b}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=s(n),b=a,v=u["".concat(p,".").concat(b)]||u[b]||d[b]||i;return n?r.createElement(v,l(l({ref:t},c),{},{components:n})):r.createElement(v,l({ref:t},c))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=u;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1419:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return p},default:function(){return b},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return d}});var r=n(7462),a=n(3366),i=(n(7294),n(4137)),l=["components"],o={},p="Event bubbling and capture",s={unversionedId:"javascript/web-apis/event-bubbling-and-capture",id:"javascript/web-apis/event-bubbling-and-capture",title:"Event bubbling and capture",description:"References",source:"@site/docs/javascript/web-apis/event-bubbling-and-capture.md",sourceDirName:"javascript/web-apis",slug:"/javascript/web-apis/event-bubbling-and-capture",permalink:"/javascript/web-apis/event-bubbling-and-capture",draft:!1,tags:[],version:"current",lastUpdatedAt:1658953120,formattedLastUpdatedAt:"7/27/2022",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Introduction",permalink:"/"},next:{title:"Event.target vs Event.currentTarget",permalink:"/javascript/web-apis/event-target-vs-current-target"}},c={},d=[{value:"References",id:"references",level:2},{value:"What are they?",id:"what-are-they",level:2},{value:"Bubbling",id:"bubbling",level:3},{value:"Capturing",id:"capturing",level:3},{value:"EventTarget.addEventListener()",id:"eventtargetaddeventlistener",level:2},{value:"Example",id:"example",level:3},{value:"Remarks",id:"remarks",level:2}],u={toc:d};function b(e){var t=e.components,n=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"event-bubbling-and-capture"},"Event bubbling and capture"),(0,i.kt)("h2",{id:"references"},"References"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#event_bubbling_and_capture"},"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#event_bubbling_and_capture")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener"},"https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener"))),(0,i.kt)("h2",{id:"what-are-they"},"What are they?"),(0,i.kt)("blockquote",{className:"styled"},"Event bubbling and capture are terms that describe phases in how the browser handles events targeted at ",(0,i.kt)("strong",null,"nested elements"),"."),(0,i.kt)("h3",{id:"bubbling"},"Bubbling"),(0,i.kt)("p",null,"Imagine there is a ",(0,i.kt)("inlineCode",{parentName:"p"},"<button>")," inside a ",(0,i.kt)("inlineCode",{parentName:"p"},"<div>"),"."),(0,i.kt)("p",null,"If a click event handler is attached to the ",(0,i.kt)("inlineCode",{parentName:"p"},"<div>"),", the event handler will be called when not only the ",(0,i.kt)("inlineCode",{parentName:"p"},"<div>")," is clicked, but also the ",(0,i.kt)("inlineCode",{parentName:"p"},"<button>")," ",(0,i.kt)("em",{parentName:"p"},"inside of it")," is clicked. And this behavior is called ",(0,i.kt)("strong",{parentName:"p"},"bubbling"),"."),(0,i.kt)("p",null,"In other words, even if the element that is actually clicked (",(0,i.kt)("inlineCode",{parentName:"p"},"event.target"),")\u2014in this case the ",(0,i.kt)("inlineCode",{parentName:"p"},"<button>"),"\u2014doesn't have an event handler, the event is propagated upwards to the parent (",(0,i.kt)("inlineCode",{parentName:"p"},"<div>"),") to see if there's any event handler for ",(0,i.kt)("inlineCode",{parentName:"p"},"click")," event and if there is, the handler will be executed."),(0,i.kt)("p",null,"This behavior is continued until the browser reaches the ",(0,i.kt)("inlineCode",{parentName:"p"},"<html>")," element\u2014or even to the objects that are higher in the hierarchy (",(0,i.kt)("inlineCode",{parentName:"p"},"document")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"window"),") if they have registered listeners for the event."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Bubbling")," can be prevented by calling ",(0,i.kt)("inlineCode",{parentName:"p"},"event.stopPropagation()"),". The ",(0,i.kt)("inlineCode",{parentName:"p"},"event")," object can be accessed inside the event handler as a first argument."),(0,i.kt)("h3",{id:"capturing"},"Capturing"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Capturing")," works in the exact ",(0,i.kt)("em",{parentName:"p"},"opposite direction")," to bubbling."),(0,i.kt)("p",null,"So when an event occurs from an element, the browser will seek and execute the element's ancestors' handlers first ",(0,i.kt)("em",{parentName:"p"},"even before")," it tries to call the handlers (if any) attached to the target element itself."),(0,i.kt)("h2",{id:"eventtargetaddeventlistener"},"EventTarget.addEventListener()"),(0,i.kt)("p",null,"When you attach an event handler using ",(0,i.kt)("inlineCode",{parentName:"p"},"addEventListener()")," web api, the default behavior is to ",(0,i.kt)("strong",{parentName:"p"},"bubble")," (propagate upwards). You can switch from bubbling to ",(0,i.kt)("strong",{parentName:"p"},"capturing")," using the third argument of ",(0,i.kt)("inlineCode",{parentName:"p"},"addEventListener()"),"."),(0,i.kt)("h3",{id:"example"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// Assuming there is <div id="root"> element in the associated html document.\nconst div = document.getElementById("root");\n\n// By default the event will bubble.\ndiv.addEventListener("click", () => console.log("clicked"));\n\n// Using the third argument, we can switch to capturing.\ndiv.addEventListener("click", () => console.log("clicked"), true);\n// or\ndiv.addEventListener("click", () => console.log("clicked"), {\n  capture: true,\n});\n')),(0,i.kt)("h2",{id:"remarks"},"Remarks"),(0,i.kt)("p",null,"Event bubbling and capturing modes are mutually exclusive\u2014they are one or the other, not both."),(0,i.kt)("blockquote",{className:"styled"},"Events that are bubbling upward through the tree will not trigger a listener designated to use capture.",(0,i.kt)("span",null,(0,i.kt)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener",target:"_blank"},"MDN - EventTarget.addEventListener()"))))}b.isMDXComponent=!0}}]);